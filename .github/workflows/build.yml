name: build

on:
  push:
    tags: ['v*', 'test*']

jobs:
  build_macos:
    name: Build for MacOS
    runs-on: macos-10.15
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
    - name: "Setup Node"
      uses: actions/setup-node@v2
      with:
        node-version: '14.15.1'
    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'
    - name: Cache Go Modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: "Build"
      run: make build_macos
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: _output/macos/*

  build_windows:
    name: Build for Windows
    runs-on: windows-2019
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
    - name: "Setup Node"
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'
    - name: Cache Go Modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: "Build"
      run: make build_windows
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: _output/windows/*

  build_linux:
    name: Build for Linux
    runs-on: ubuntu-18.04
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
    - name: "Setup Node"
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'
    - name: Cache Go Modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: "Build"
      run: make build_linux
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: _output/linux/*

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
#     if: ${{ !contains(github.ref, 'test') }}
    needs: [build_macos, build_windows, build_linux]
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: true
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: .
    - name: Preparation
      run: |
        ls -R
        chmod u+x macos/mogutou
        chmod u+x linux/mogutou

        zip -r macos.zip macos/
        zip -r windows.zip windows/
        zip -r linux.zip linux/
    - name: Upload MacOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos.zip
          asset_name: ${{ github.ref }}-macos64.zip
          asset_content_type: application/zip
    - name: Upload Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows.zip
          asset_name: ${{ github.ref }}-windows32.zip
          asset_content_type: application/zip
    - name: Upload Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux.zip
          asset_name: ${{ github.ref }}-linux32.zip
          asset_content_type: application/zip
